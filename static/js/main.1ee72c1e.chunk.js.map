{"version":3,"sources":["assets/marvel-logo.png","DetailView/DetailView.js","ListView/CharacterView.js","ListView/CharList.js","ListView/CharacterSearch.js","GalleryView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DetailView","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","data","inherits","createClass","key","value","_this2","fullUrl","props","match","params","charId","axios","get","then","res","status","setState","console","log","catch","err","response","react_default","a","createElement","imgPath","results","thumbnail","path","extension","className","Link","to","Card","Image","src","size","Content","header","name","textAlign","description","Component","CharacterView","infoToDisplay","info","stories","available","series","id","Header","extra","CharList","listIds","list","map","sort","b","sortAscending","sortValue","src_ListView_CharacterView","PUBLIC_KEY","LIMIT","CharacterSearch","sortOptions","text","getInfo","url","baseUrl","fieldValue","onChangeHandler","event","target","doSort","isAscending","onClickHandler","currentTarget","command","firstChild","changeDropdown","Input","placeholder","onChange","Button","icon","onClick","Icon","Dropdown","fluid","selection","options","src_ListView_CharList","GalleryView","charList","Group","char","rounded","App","marvel_logo","alt","BrowserRouter","Switch","Route","exact","process","render","src_GalleryView","src_ListView_CharacterSearch","component","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ee72c1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marvel-logo.4468eddc.png\";","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport './DetailView.css'\r\nimport { Card, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PUBLIC_KEY = \"143409854ea7dad3962b62316a567d0d\";\r\n\r\nexport class DetailView extends Component {\r\n\r\n  state = {\r\n    data: null\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    const baseUrl = 'https://gateway.marvel.com/v1/public/characters/'\r\n\r\n    // console.log(this.props.match.params.charId);\r\n    const fullUrl = `${baseUrl}${this.props.match.params.charId}\r\n                ?apikey=${PUBLIC_KEY}`\r\n\r\n    axios.get(fullUrl).then(res => {\r\n      if (res.status !== 200) {\r\n        console.log(`bad request: Request Code ${res.status}`);\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        data: res.data\r\n      })\r\n\r\n    }).catch(err => {\r\n      console.log(err.response);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.data === null) {\r\n      return (\r\n        <p>Loading...</p>\r\n      )\r\n    } else {\r\n      const imgPath = this.state.data.data.results[0].thumbnail.path;\r\n      const extension = this.state.data.data.results[0].thumbnail.extension;\r\n\r\n      console.log(this.props);\r\n      return (\r\n        <div className='detail-view'>\r\n\r\n          <Link to='/'>List View   </Link>| \r\n          <Link to='/gallery'>   Gallery View</Link>\r\n\r\n          <Card className='character-card'>\r\n            <Image src={`${imgPath}/standard_fantastic.${extension}`} size='large'></Image>\r\n            <Card.Content header={this.state.data.data.results[0].name} textAlign='left' />\r\n            <Card.Content>\r\n              <p>{\r\n                this.state.data.data.results[0].description ||\r\n                'No description available'}</p>\r\n            </Card.Content>\r\n          </Card>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default DetailView\r\n","import React, { Component } from 'react'\r\nimport { Card, Icon, Image } from 'semantic-ui-react'\r\nimport './CharacterView.css'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport DetailView from './../DetailView/DetailView'\r\n\r\n\r\nexport class CharacterView extends Component {\r\n\r\n    infoToDisplay = () => {\r\n        if (this.props.infoToDisplay === 'stories') {\r\n            return (\r\n                <p>Featured in {this.props.info.stories.available} stories</p>\r\n            )\r\n        } else if (this.props.infoToDisplay === 'series') {\r\n            return (\r\n                <p>Featured in {this.props.info.series.available} series</p>\r\n            )\r\n        } else {\r\n            console.log('Error: intoToDisplay is not one of the possible types');\r\n            return (\r\n                <p></p>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let imgPath = this.props.info.thumbnail.path;\r\n        let extension = this.props.info.thumbnail.extension;\r\n\r\n        return (\r\n            <div>\r\n                <Link to={`/details/${this.props.id}`}>\r\n                    <Card className='character-card'>\r\n                        <Card.Content>\r\n                            <Card.Header>{this.props.info.name}</Card.Header>\r\n                            {/* <Image src={ `${imgPath}/standard_fantastic.${extension}` } size='large'></Image> */}\r\n                        </Card.Content>\r\n                        <Card.Content extra>\r\n                            {this.infoToDisplay()}\r\n                        </Card.Content>\r\n                    </Card>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CharacterView\r\n","import React, { Component } from 'react'\r\nimport CharacterView from './CharacterView'\r\nimport PropTypes from 'prop-types'\r\nimport './CharList.css'\r\n\r\nexport class CharList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            listIds: this.props.list.map(a => a.id)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('rendering');\r\n        // console.log(this.props.sortValue);\r\n        \r\n        this.props.list.sort((a, b) => {\r\n            // console.log('sorting');\r\n            if (this.props.sortAscending === true) {\r\n                // console.log('sort ascending');\r\n                // if (this.props.sortValue === 'stories') {\r\n                //     return a.stories.available - b.stories.available;\r\n                // } else if (this.props.sortValue === 'series') {\r\n                //     return a.series.available - b.series.available;\r\n                // } else {\r\n                //     console.log('something bad');\r\n                // }\r\n                /** REVIEW: POTENTIALLY DANGEROUS */\r\n                return a[this.props.sortValue][\"available\"] - b[this.props.sortValue][\"available\"];\r\n            } else {\r\n                // if (this.props.sortValue === 'stories') {\r\n                //     return b.stories.available - a.stories.available;\r\n                // } else if (this.props.sortValue === 'series') {\r\n                //     return b.series.available - a.series.available;\r\n                // } else {\r\n                //     console.log('very bad');\r\n                // }\r\n                return b[this.props.sortValue][\"available\"] - a[this.props.sortValue][\"available\"];\r\n            }\r\n        })\r\n\r\n        console.log(this.state.listIds);\r\n\r\n        return (\r\n            <div className='character-list'>\r\n                { this.props.list.map((info) => (\r\n                    <CharacterView key={info.id} id={info.id} info={info} infoToDisplay={this.props.sortValue}/>\r\n                )) }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCharList.propTypes = {\r\n    list: PropTypes.arrayOf(PropTypes.shape({\r\n        thumbnail: PropTypes.shape({\r\n            path: PropTypes.string,\r\n            extension: PropTypes.string\r\n        }),\r\n        name: PropTypes.string\r\n    })),\r\n    sortAscending: PropTypes.bool,\r\n    sortValue: PropTypes.string\r\n}\r\n\r\nexport default CharList\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { Input, Button, Icon, Dropdown } from 'semantic-ui-react'\r\nimport axios from 'axios'\r\n\r\nimport CharacterList from './CharList';\r\nimport './CharacterSearch.css';\r\n\r\n/** Rate limit: 3000 calls/day */\r\nconst PUBLIC_KEY = \"143409854ea7dad3962b62316a567d0d\";\r\n// const PRIVATE_KEY = \"c5ae7de3b072fa533e7d9563ae5c0f559c26b627\";\r\nconst LIMIT = 50;\r\n\r\n\r\n/**\r\n * TODO: 1. add sort by feature in list view\r\n *       2. sort descending or ascending \r\n *       3. probably stop using the shouldGET optimization\r\n *       4. add gallery view\r\n * \r\n */\r\n\r\n/** This class will handle API calls to GET Pokemon info */\r\nexport class CharacterSearch extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.baseUrl = 'https://gateway.marvel.com/v1/public/characters';\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      results: [],\r\n      fieldValue: \"\",\r\n      sortAscending: false, /** When sortAscending false, we sort by descending */\r\n      sortValue: 'stories'\r\n    }\r\n  }\r\n\r\n  sortOptions = [\r\n    {\r\n      text: 'Number of stories featured in',\r\n      value: 'stories'\r\n    },\r\n    {\r\n      text: 'Number of series featured in',\r\n      value: 'series'\r\n    }\r\n  ]\r\n\r\n  getInfo = () => {\r\n    let url = `${this.baseUrl}?nameStartsWith=${this.state.fieldValue}&apikey=${PUBLIC_KEY}&limit=${LIMIT}`;\r\n    axios.get(url).then(res => {\r\n      if (res.status !== 200) {\r\n        console.log(`bad request: Request Code ${res.status}`);\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        results: res.data.data.results\r\n      })\r\n    }).catch(err => {\r\n      console.log(err.response);\r\n    })\r\n  }\r\n\r\n  onChangeHandler = (event) => {\r\n\r\n    /** rn assumes only thing using onChangeHandler is search bar */\r\n    this.setState({\r\n      fieldValue: event.target.value\r\n    }, () => {\r\n      if (this.state.fieldValue && this.state.fieldValue.length > 0) {\r\n        // if (this.shouldGET) {\r\n          this.getInfo();\r\n        // } else {\r\n        //   // Filter old results for starting with the new search string\r\n        //   const newResults = this.state.results.filter(char => {\r\n        //     return char.name.toLowerCase().startsWith(this.state.fieldValue.toLowerCase());\r\n        //   });\r\n        //   this.setState({\r\n        //     results: newResults\r\n        //   })\r\n        // }\r\n      }\r\n    });\r\n  }\r\n\r\n  doSort = isAscending => {\r\n    if (isAscending === this.state.sortAscending) {\r\n      return;\r\n    } else if (isAscending === false) {\r\n      this.setState({\r\n        sortAscending: false\r\n      })\r\n    } else if (isAscending === true) {\r\n      this.setState({\r\n        sortAscending: true\r\n      })\r\n    } else {\r\n      console.log('error: isAscending is neither true nor false; contact author');\r\n    }\r\n  }\r\n\r\n  onClickHandler = event => {\r\n    /** React UI elements handle onclick differently than normal JS, hence the this.as */\r\n    if (event.currentTarget.className === 'ui icon button') { \r\n      const command = event.currentTarget.firstChild.className; \r\n      if (command === 'sort amount up icon') {\r\n        this.doSort(true);\r\n      } else if (command === 'sort amount down icon') {\r\n        this.doSort(false);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   /** If the user is typing more letters of a character's name,\r\n  //    *  we shouldn't have to GET again because the list will be a strict\r\n  //    *  subset of the previous one. We'll just filter the list in onChangeHandler.\r\n  //    * REVIEW: Potential issue: because of LIMIT, some results might not show up on \r\n  //    *         the first query, but they should after a second letter has been typed. Looks like max\r\n  //    *         limit is 100. For now I'll keep it like this because it's sick\r\n  //   */\r\n  //   if (this.state.fieldValue.includes(prevState.fieldValue) &&\r\n  //     this.state.fieldValue.length > prevState.fieldValue.length &&\r\n  //     prevState.fieldValue.length >= 1) {\r\n  //     // console.log('changing');\r\n  //     this.shouldGET = false;\r\n  //   } else {\r\n  //     this.shouldGET = true;\r\n  //   }\r\n  // }\r\n\r\n  /**\r\n   * I made a separate onChange handler for the dropdown because getting the event class from a dropdown \r\n   * is super inconsistent. Among the things it has told me event.currentTarget are are [item, selected item, \r\n   * active selected item]\r\n   */\r\n  changeDropdown = (event, data) => {\r\n    this.setState({\r\n      sortValue: data.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='Character-searcher'>\r\n\r\n        <Link to='/gallery'>Gallery View</Link>\r\n\r\n        <div className='search-stuff'>\r\n          <Input className=\"App-input\" size='small' placeholder='Search a character...' onChange={this.onChangeHandler} />\r\n        \r\n          <Button icon onClick={this.onClickHandler}>\r\n            <Icon name='sort amount up' />\r\n          </Button>\r\n          <Button icon onClick={this.onClickHandler}>\r\n            <Icon name='sort amount down' />\r\n          </Button>\r\n        </div>\r\n        <Dropdown placeholder='Sort by...' fluid selection value={ this.state.sortValue } options={ this.sortOptions } \r\n                                                           onChange={this.changeDropdown}/>\r\n        <CharacterList list={this.state.results} sortAscending={this.state.sortAscending} \r\n          sortValue={ this.state.sortValue }/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CharacterSearch\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Image } from 'semantic-ui-react'\r\nimport axios from 'axios'\r\n\r\nconst PUBLIC_KEY = \"143409854ea7dad3962b62316a567d0d\";\r\n\r\n\r\nexport class GalleryView extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      charList: []\r\n    }\r\n  }\r\n\r\n  //TODO: find a way to cache this info so i don't have to reload gallery pictures every time\r\n  componentDidMount() {\r\n    const baseUrl = 'https://gateway.marvel.com/v1/public/characters'\r\n\r\n    // console.log(this.props.match.params.charId);\r\n    const fullUrl = `${baseUrl}?limit=100&apikey=${PUBLIC_KEY}`\r\n\r\n    axios.get(fullUrl).then(res => {\r\n      if (res.status !== 200) {\r\n        console.log(`bad request: Request Code ${res.status}`);\r\n        return;\r\n      }\r\n      this.setState({\r\n        charList: res.data.data.results\r\n      })\r\n\r\n    }).catch(err => {\r\n      console.log(err.response);\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.charList === null) {\r\n      return (\r\n        <h3>Loading...</h3>\r\n      )\r\n    } else {\r\n      // console.log(this.state.charList);\r\n      return (\r\n        <div>\r\n          <Link to='/'>List View</Link>\r\n          <Image.Group>\r\n            {this.state.charList.map(char => (\r\n              <Link key={`${char.id}`} to={`/details/${char.id}`}>\r\n                <Image src={`${char.thumbnail.path}/portrait_medium.${char.thumbnail.extension}`} rounded />\r\n              </Link>\r\n            ))}\r\n          </Image.Group>\r\n        </div>\r\n      )\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default GalleryView\r\n","import React, { Component } from 'react'\r\nimport marvel_logo from './assets/marvel-logo.png';\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\nimport CharacterSearch from './ListView/CharacterSearch'\r\nimport GalleryView from './GalleryView'\r\nimport DetailView from './DetailView/DetailView'\r\nimport './App.css'\r\n\r\nexport class App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App-header\">\r\n                <div className=\"App-logo\">\r\n                    <img src={marvel_logo} alt=\"logo\" />\r\n                </div>\r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact path={process.env.PUBLIC_URL + '/gallery'} render={() => <GalleryView />} />\r\n                        <Route exact path={process.env.PUBLIC_URL + '/'} render={() => <CharacterSearch/>} />\r\n                        <Route exact path={process.env.PUBLIC_URL + '/details/:charId'} component={DetailView}/>\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}